apply plugin: 'java'
apply plugin: 'java-library'

description = "Client Server Socket Example"

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(18))
    }
}

wrapper {
    gradleVersion = '7.4.2'
    distributionType = Wrapper.DistributionType.ALL
}

repositories {
    mavenCentral()
}

dependencies {
    // Implement gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
}

sourceSets {
    src {
        main {
            java {
                srcDirs = ['src/main/java']
            }
            resources {
                srcDirs = ['src/main/resources']
            }
        }
    }
}

// Client and Server socket, socket can serve up to three clients
// The port is defined directly in the Java files. For practice consider changing
// the tasks to add the port as input to the Gradle task
task Server(type: JavaExec) {
    group 'TCP Server/Client'
    description 'Creates Server socket waits for up to 3 messages'

    classpath = sourceSets.main.runtimeClasspath

    main = 'server.SockServer'
    // Set standard input to be the terminal
    standardInput = System.in

    String port = (project.hasProperty("port") ? project.property("port") : "8888")

    args port
}

task Client(type: JavaExec) {
    group 'TCP Server/Client'
    description 'Creates client socket sends a message and number to server'

    classpath = sourceSets.main.runtimeClasspath

    main = 'client.SockClient'
    // Set standard input to be the terminal
    standardInput = System.in

    String port = (project.hasProperty("port") ? project.property("port") : "8888")
    String host = (project.hasProperty("host") ? project.property("host") : "localhost")

    args port, host
}